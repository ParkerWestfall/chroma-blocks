{"version":3,"sources":["/Users/netweb/dev/wordpress/gutenberg/packages/deprecated/src/index.js"],"names":["logged","deprecated","feature","version","alternative","plugin","link","hint","pluginMessage","versionMessage","useInsteadMessage","linkMessage","hintMessage","message","console","warn"],"mappings":";;;AAAA;;;;;;AAMA,OAAO,IAAMA,MAAM,GAAG,eAAe,IAAf,CAAf;AAEP;;;;;;;;;;;;AAWA,eAAe,SAASC,UAAT,CAAqBC,OAArB,EAAkF;AAAA,iFAAL,EAAK;AAAA,MAAlDC,OAAkD,QAAlDA,OAAkD;AAAA,MAAzCC,WAAyC,QAAzCA,WAAyC;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,IAAc,QAAdA,IAAc;;AAChG,MAAMC,aAAa,GAAGH,MAAM,mBAAaA,MAAb,IAAyB,EAArD;AACA,MAAMI,cAAc,GAAGN,OAAO,aAAOK,aAAP,iBAA6BL,OAA7B,IAA0C,EAAxE;AACA,MAAMO,iBAAiB,GAAGN,WAAW,yBAAmBA,WAAnB,iBAA6C,EAAlF;AACA,MAAMO,WAAW,GAAGL,IAAI,mBAAaA,IAAb,IAAuB,EAA/C;AACA,MAAMM,WAAW,GAAGL,IAAI,oBAAcA,IAAd,IAAwB,EAAhD;AACA,MAAMM,OAAO,aAAOX,OAAP,+CAAqDO,cAArD,cAAyEC,iBAAzE,SAA+FC,WAA/F,SAA+GC,WAA/G,CAAb,CANgG,CAQhG;;AACA,MAAKC,OAAO,IAAIb,MAAhB,EAAyB;AACxB;AACA,GAX+F,CAahG;;;AACAc,EAAAA,OAAO,CAACC,IAAR,CAAcF,OAAd;AAEAb,EAAAA,MAAM,CAAEa,OAAF,CAAN,GAAoB,IAApB;AACA","sourcesContent":["/**\n * Object map tracking messages which have been logged, for use in ensuring a\n * message is only logged once.\n *\n * @type {Object}\n */\nexport const logged = Object.create( null );\n\n/**\n * Logs a message to notify developers about a deprecated feature.\n *\n * @param {string}  feature             Name of the deprecated feature.\n * @param {?Object} options             Personalisation options\n * @param {?string} options.version     Version in which the feature will be removed.\n * @param {?string} options.alternative Feature to use instead\n * @param {?string} options.plugin      Plugin name if it's a plugin feature\n * @param {?string} options.link        Link to documentation\n * @param {?string} options.hint        Additional message to help transition away from the deprecated feature.\n */\nexport default function deprecated( feature, { version, alternative, plugin, link, hint } = {} ) {\n\tconst pluginMessage = plugin ? ` from ${ plugin }` : '';\n\tconst versionMessage = version ? `${ pluginMessage } in ${ version }` : '';\n\tconst useInsteadMessage = alternative ? ` Please use ${ alternative } instead.` : '';\n\tconst linkMessage = link ? ` See: ${ link }` : '';\n\tconst hintMessage = hint ? ` Note: ${ hint }` : '';\n\tconst message = `${ feature } is deprecated and will be removed${ versionMessage }.${ useInsteadMessage }${ linkMessage }${ hintMessage }`;\n\n\t// Skip if already logged.\n\tif ( message in logged ) {\n\t\treturn;\n\t}\n\n\t// eslint-disable-next-line no-console\n\tconsole.warn( message );\n\n\tlogged[ message ] = true;\n}\n"]}