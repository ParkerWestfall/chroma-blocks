{"version":3,"sources":["/Users/gziolo/PhpstormProjects/gutenberg/packages/element/src/serialize.js"],"names":["ATTRIBUTES_TYPES","SELF_CLOSING_TAGS","BOOLEAN_ATTRIBUTES","ENUMERATED_ATTRIBUTES","CSS_PROPERTIES_SUPPORTS_UNITLESS","REGEXP_INVALID_ATTRIBUTE_NAME","escapeAmpersand","value","replace","escapeQuotationMark","escapeLessThan","escapeAttribute","escapeHTML","isValidAttributeName","name","test","hasPrefix","string","prefixes","some","prefix","indexOf","isInternalAttribute","attribute","getNormalAttributeValue","renderStyle","getNormalAttributeName","toLowerCase","getNormalStylePropertyName","property","getNormalStylePropertyValue","has","renderElement","element","context","undefined","Array","isArray","renderChildren","toString","tagName","type","props","Fragment","children","RawHTML","wrapperProps","renderNativeComponent","dangerouslySetInnerHTML","__html","prototype","render","renderComponent","content","hasOwnProperty","attributes","renderAttributes","Component","instance","getChildContext","html","result","i","length","child","key","isBooleanAttribute","isMeaningfulAttribute","style","normalName","normalValue"],"mappings":"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","sourcesContent":["/**\n * Parts of this source were derived and modified from fast-react-render,\n * released under the MIT license.\n *\n * https://github.com/alt-j/fast-react-render\n *\n * Copyright (c) 2016 Andrey Morozov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * External dependencies\n */\nimport {\n\tflowRight,\n\tisEmpty,\n\tcastArray,\n\tomit,\n\tstartsWith,\n\tkebabCase,\n\tisPlainObject,\n} from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { Fragment, RawHTML } from './';\n\n/**\n * Valid attribute types.\n *\n * @type {Set}\n */\nconst ATTRIBUTES_TYPES = new Set( [\n\t'string',\n\t'boolean',\n\t'number',\n] );\n\n/**\n * Element tags which can be self-closing.\n *\n * @type {Set}\n */\nconst SELF_CLOSING_TAGS = new Set( [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr',\n] );\n\n/**\n * Boolean attributes are attributes whose presence as being assigned is\n * meaningful, even if only empty.\n *\n * See: https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n * Extracted from: https://html.spec.whatwg.org/multipage/indices.html#attributes-3\n *\n * Object.keys( [ ...document.querySelectorAll( '#attributes-1 > tbody > tr' ) ]\n *     .filter( ( tr ) => tr.lastChild.textContent.indexOf( 'Boolean attribute' ) !== -1 )\n *     .reduce( ( result, tr ) => Object.assign( result, {\n *         [ tr.firstChild.textContent.trim() ]: true\n *     } ), {} ) ).sort();\n *\n * @type {Set}\n */\nconst BOOLEAN_ATTRIBUTES = new Set( [\n\t'allowfullscreen',\n\t'allowpaymentrequest',\n\t'allowusermedia',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'defer',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'ismap',\n\t'itemscope',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'selected',\n\t'typemustmatch',\n] );\n\n/**\n * Enumerated attributes are attributes which must be of a specific value form.\n * Like boolean attributes, these are meaningful if specified, even if not of a\n * valid enumerated value.\n *\n * See: https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#enumerated-attribute\n * Extracted from: https://html.spec.whatwg.org/multipage/indices.html#attributes-3\n *\n * Object.keys( [ ...document.querySelectorAll( '#attributes-1 > tbody > tr' ) ]\n *     .filter( ( tr ) => /^(\"(.+?)\";?\\s*)+/.test( tr.lastChild.textContent.trim() ) )\n *     .reduce( ( result, tr ) => Object.assign( result, {\n *         [ tr.firstChild.textContent.trim() ]: true\n *     } ), {} ) ).sort();\n *\n * Some notable omissions:\n *\n *  - `alt`: https://blog.whatwg.org/omit-alt\n *\n * @type {Set}\n */\nconst ENUMERATED_ATTRIBUTES = new Set( [\n\t'autocapitalize',\n\t'autocomplete',\n\t'charset',\n\t'contenteditable',\n\t'crossorigin',\n\t'decoding',\n\t'dir',\n\t'draggable',\n\t'enctype',\n\t'formenctype',\n\t'formmethod',\n\t'http-equiv',\n\t'inputmode',\n\t'kind',\n\t'method',\n\t'preload',\n\t'scope',\n\t'shape',\n\t'spellcheck',\n\t'translate',\n\t'type',\n\t'wrap',\n] );\n\n/**\n * Set of CSS style properties which support assignment of unitless numbers.\n * Used in rendering of style properties, where `px` unit is assumed unless\n * property is included in this set or value is zero.\n *\n * Generated via:\n *\n * Object.entries( document.createElement( 'div' ).style )\n *     .filter( ( [ key ] ) => (\n *         ! /^(webkit|ms|moz)/.test( key ) &&\n *         ( e.style[ key ] = 10 ) &&\n *         e.style[ key ] === '10'\n *     ) )\n *     .map( ( [ key ] ) => key )\n *     .sort();\n *\n * @type {Set}\n */\nconst CSS_PROPERTIES_SUPPORTS_UNITLESS = new Set( [\n\t'animation',\n\t'animationIterationCount',\n\t'baselineShift',\n\t'borderImageOutset',\n\t'borderImageSlice',\n\t'borderImageWidth',\n\t'columnCount',\n\t'cx',\n\t'cy',\n\t'fillOpacity',\n\t'flexGrow',\n\t'flexShrink',\n\t'floodOpacity',\n\t'fontWeight',\n\t'gridColumnEnd',\n\t'gridColumnStart',\n\t'gridRowEnd',\n\t'gridRowStart',\n\t'lineHeight',\n\t'opacity',\n\t'order',\n\t'orphans',\n\t'r',\n\t'rx',\n\t'ry',\n\t'shapeImageThreshold',\n\t'stopOpacity',\n\t'strokeDasharray',\n\t'strokeDashoffset',\n\t'strokeMiterlimit',\n\t'strokeOpacity',\n\t'strokeWidth',\n\t'tabSize',\n\t'widows',\n\t'x',\n\t'y',\n\t'zIndex',\n\t'zoom',\n] );\n\n/**\n * Regular expression matching invalid attribute names.\n *\n * \"Attribute names must consist of one or more characters other than controls,\n * U+0020 SPACE, U+0022 (\"), U+0027 ('), U+003E (>), U+002F (/), U+003D (=),\n * and noncharacters.\"\n *\n * @link https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n *\n * @type {RegExp}\n */\nconst REGEXP_INVALID_ATTRIBUTE_NAME = /[\\u007F-\\u009F \"'>/=\"\\uFDD0-\\uFDEF]/;\n\n/**\n * Returns a string with ampersands escaped. Note that this is an imperfect\n * implementation, where only ampersands which do not appear as a pattern of\n * named, decimal, or hexadecimal character references are escaped. Invalid\n * named references (i.e. ambiguous ampersand) are are still permitted.\n *\n * @link https://w3c.github.io/html/syntax.html#character-references\n * @link https://w3c.github.io/html/syntax.html#ambiguous-ampersand\n * @link https://w3c.github.io/html/syntax.html#named-character-references\n *\n * @param {string} value Original string.\n *\n * @return {string} Escaped string.\n */\nexport function escapeAmpersand( value ) {\n\treturn value.replace( /&(?!([a-z0-9]+|#[0-9]+|#x[a-f0-9]+);)/gi, '&amp;' );\n}\n\n/**\n * Returns a string with quotation marks replaced.\n *\n * @param {string} value Original string.\n *\n * @return {string} Escaped string.\n */\nexport function escapeQuotationMark( value ) {\n\treturn value.replace( /\"/g, '&quot;' );\n}\n\n/**\n * Returns a string with less-than sign replaced.\n *\n * @param {string} value Original string.\n *\n * @return {string} Escaped string.\n */\nexport function escapeLessThan( value ) {\n\treturn value.replace( /</g, '&lt;' );\n}\n\n/**\n * Returns an escaped attribute value.\n *\n * @link https://w3c.github.io/html/syntax.html#elements-attributes\n *\n * \"[...] the text cannot contain an ambiguous ampersand [...] must not contain\n * any literal U+0022 QUOTATION MARK characters (\")\"\n *\n * @param {string} value Attribute value.\n *\n * @return {string} Escaped attribute value.\n */\nexport const escapeAttribute = flowRight( [\n\tescapeAmpersand,\n\tescapeQuotationMark,\n] );\n\n/**\n * Returns an escaped HTML element value.\n *\n * @link https://w3c.github.io/html/syntax.html#writing-html-documents-elements\n *\n * \"the text must not contain the character U+003C LESS-THAN SIGN (<) or an\n * ambiguous ampersand.\"\n *\n * @param {string} value Element value.\n *\n * @return {string} Escaped HTML element value.\n */\nexport const escapeHTML = flowRight( [\n\tescapeAmpersand,\n\tescapeLessThan,\n] );\n\n/**\n * Returns true if the given attribute name is valid, or false otherwise.\n *\n * @param {string} name Attribute name to test.\n *\n * @return {boolean} Whether attribute is valid.\n */\nexport function isValidAttributeName( name ) {\n\treturn ! REGEXP_INVALID_ATTRIBUTE_NAME.test( name );\n}\n\n/**\n * Returns true if the specified string is prefixed by one of an array of\n * possible prefixes.\n *\n * @param {string}   string   String to check.\n * @param {string[]} prefixes Possible prefixes.\n *\n * @return {boolean} Whether string has prefix.\n */\nexport function hasPrefix( string, prefixes ) {\n\treturn prefixes.some( ( prefix ) => string.indexOf( prefix ) === 0 );\n}\n\n/**\n * Returns true if the given prop name should be ignored in attributes\n * serialization, or false otherwise.\n *\n * @param {string} attribute Attribute to check.\n *\n * @return {boolean} Whether attribute should be ignored.\n */\nfunction isInternalAttribute( attribute ) {\n\treturn 'key' === attribute || 'children' === attribute;\n}\n\n/**\n * Returns the normal form of the element's attribute value for HTML.\n *\n * @param {string} attribute Attribute name.\n * @param {*}      value     Non-normalized attribute value.\n *\n * @return {string} Normalized attribute value.\n */\nfunction getNormalAttributeValue( attribute, value ) {\n\tswitch ( attribute ) {\n\t\tcase 'style':\n\t\t\treturn renderStyle( value );\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the normal form of the element's attribute name for HTML.\n *\n * @param {string} attribute Non-normalized attribute name.\n *\n * @return {string} Normalized attribute name.\n */\nfunction getNormalAttributeName( attribute ) {\n\tswitch ( attribute ) {\n\t\tcase 'htmlFor':\n\t\t\treturn 'for';\n\n\t\tcase 'className':\n\t\t\treturn 'class';\n\t}\n\n\treturn attribute.toLowerCase();\n}\n\n/**\n * Returns the normal form of the style property name for HTML.\n *\n * - Converts property names to kebab-case, e.g. 'backgroundColor' → 'background-color'\n * - Leaves custom attributes alone, e.g. '--myBackgroundColor' → '--myBackgroundColor'\n * - Converts vendor-prefixed property names to -kebab-case, e.g. 'MozTransform' → '-moz-transform'\n *\n * @param {string} property Property name.\n *\n * @return {string} Normalized property name.\n */\nfunction getNormalStylePropertyName( property ) {\n\tif ( startsWith( property, '--' ) ) {\n\t\treturn property;\n\t}\n\n\tif ( hasPrefix( property, [ 'ms', 'O', 'Moz', 'Webkit' ] ) ) {\n\t\treturn '-' + kebabCase( property );\n\t}\n\n\treturn kebabCase( property );\n}\n\n/**\n * Returns the normal form of the style property value for HTML. Appends a\n * default pixel unit if numeric, not a unitless property, and not zero.\n *\n * @param {string} property Property name.\n * @param {*}      value    Non-normalized property value.\n *\n * @return {*} Normalized property value.\n */\nfunction getNormalStylePropertyValue( property, value ) {\n\tif ( typeof value === 'number' && 0 !== value &&\n\t\t\t! CSS_PROPERTIES_SUPPORTS_UNITLESS.has( property ) ) {\n\t\treturn value + 'px';\n\t}\n\n\treturn value;\n}\n\n/**\n * Serializes a React element to string.\n *\n * @param {WPElement} element Element to serialize.\n * @param {?Object}   context Context object.\n *\n * @return {string} Serialized element.\n */\nexport function renderElement( element, context = {} ) {\n\tif ( null === element || undefined === element || false === element ) {\n\t\treturn '';\n\t}\n\n\tif ( Array.isArray( element ) ) {\n\t\treturn renderChildren( element, context );\n\t}\n\n\tswitch ( typeof element ) {\n\t\tcase 'string':\n\t\t\treturn escapeHTML( element );\n\n\t\tcase 'number':\n\t\t\treturn element.toString();\n\t}\n\n\tconst { type: tagName, props } = element;\n\n\tswitch ( tagName ) {\n\t\tcase Fragment:\n\t\t\treturn renderChildren( props.children, context );\n\n\t\tcase RawHTML:\n\t\t\tconst { children, ...wrapperProps } = props;\n\n\t\t\treturn renderNativeComponent(\n\t\t\t\tisEmpty( wrapperProps ) ? null : 'div',\n\t\t\t\t{\n\t\t\t\t\t...wrapperProps,\n\t\t\t\t\tdangerouslySetInnerHTML: { __html: children },\n\t\t\t\t},\n\t\t\t\tcontext\n\t\t\t);\n\t}\n\n\tswitch ( typeof tagName ) {\n\t\tcase 'string':\n\t\t\treturn renderNativeComponent( tagName, props, context );\n\n\t\tcase 'function':\n\t\t\tif ( tagName.prototype && typeof tagName.prototype.render === 'function' ) {\n\t\t\t\treturn renderComponent( tagName, props, context );\n\t\t\t}\n\n\t\t\treturn renderElement( tagName( props, context ), context );\n\t}\n\n\treturn '';\n}\n\n/**\n * Serializes a native component type to string.\n *\n * @param {?string} type    Native component type to serialize, or null if\n *                          rendering as fragment of children content.\n * @param {Object}  props   Props object.\n * @param {?Object} context Context object.\n *\n * @return {string} Serialized element.\n */\nexport function renderNativeComponent( type, props, context = {} ) {\n\tlet content = '';\n\tif ( type === 'textarea' && props.hasOwnProperty( 'value' ) ) {\n\t\t// Textarea children can be assigned as value prop. If it is, render in\n\t\t// place of children. Ensure to omit so it is not assigned as attribute\n\t\t// as well.\n\t\tcontent = renderChildren( props.value, context );\n\t\tprops = omit( props, 'value' );\n\t} else if ( props.dangerouslySetInnerHTML &&\n\t\t\ttypeof props.dangerouslySetInnerHTML.__html === 'string' ) {\n\t\t// Dangerous content is left unescaped.\n\t\tcontent = props.dangerouslySetInnerHTML.__html;\n\t} else if ( typeof props.children !== 'undefined' ) {\n\t\tcontent = renderChildren( props.children, context );\n\t}\n\n\tif ( ! type ) {\n\t\treturn content;\n\t}\n\n\tconst attributes = renderAttributes( props );\n\n\tif ( SELF_CLOSING_TAGS.has( type ) ) {\n\t\treturn '<' + type + attributes + '/>';\n\t}\n\n\treturn '<' + type + attributes + '>' + content + '</' + type + '>';\n}\n\n/**\n * Serializes a non-native component type to string.\n *\n * @param {Function} Component Component type to serialize.\n * @param {Object}   props     Props object.\n * @param {?Object}  context   Context object.\n *\n * @return {string} Serialized element\n */\nexport function renderComponent( Component, props, context = {} ) {\n\tconst instance = new Component( props, context );\n\n\tif ( typeof instance.getChildContext === 'function' ) {\n\t\tObject.assign( context, instance.getChildContext() );\n\t}\n\n\tconst html = renderElement( instance.render(), context );\n\n\treturn html;\n}\n\n/**\n * Serializes an array of children to string.\n *\n * @param {Array}   children Children to serialize.\n * @param {?Object} context  Context object.\n *\n * @return {string} Serialized children.\n */\nfunction renderChildren( children, context = {} ) {\n\tlet result = '';\n\n\tchildren = castArray( children );\n\n\tfor ( let i = 0; i < children.length; i++ ) {\n\t\tconst child = children[ i ];\n\n\t\tresult += renderElement( child, context );\n\t}\n\n\treturn result;\n}\n\n/**\n * Renders a props object as a string of HTML attributes.\n *\n * @param {Object} props Props object.\n *\n * @return {string} Attributes string.\n */\nexport function renderAttributes( props ) {\n\tlet result = '';\n\n\tfor ( const key in props ) {\n\t\tconst attribute = getNormalAttributeName( key );\n\t\tif ( ! isValidAttributeName( attribute ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet value = getNormalAttributeValue( key, props[ key ] );\n\n\t\t// If value is not of serializeable type, skip.\n\t\tif ( ! ATTRIBUTES_TYPES.has( typeof value ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Don't render internal attribute names.\n\t\tif ( isInternalAttribute( key ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst isBooleanAttribute = BOOLEAN_ATTRIBUTES.has( attribute );\n\n\t\t// Boolean attribute should be omitted outright if its value is false.\n\t\tif ( isBooleanAttribute && value === false ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst isMeaningfulAttribute = (\n\t\t\tisBooleanAttribute ||\n\t\t\thasPrefix( key, [ 'data-', 'aria-' ] ) ||\n\t\t\tENUMERATED_ATTRIBUTES.has( attribute )\n\t\t);\n\n\t\t// Only write boolean value as attribute if meaningful.\n\t\tif ( typeof value === 'boolean' && ! isMeaningfulAttribute ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tresult += ' ' + attribute;\n\n\t\t// Boolean attributes should write attribute name, but without value.\n\t\t// Mere presence of attribute name is effective truthiness.\n\t\tif ( isBooleanAttribute ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( typeof value === 'string' ) {\n\t\t\tvalue = escapeAttribute( value );\n\t\t}\n\n\t\tresult += '=\"' + value + '\"';\n\t}\n\n\treturn result;\n}\n\n/**\n * Renders a style object as a string attribute value.\n *\n * @param {Object} style Style object.\n *\n * @return {string} Style attribute value.\n */\nexport function renderStyle( style ) {\n\t// Only generate from object, e.g. tolerate string value.\n\tif ( ! isPlainObject( style ) ) {\n\t\treturn style;\n\t}\n\n\tlet result;\n\n\tfor ( const property in style ) {\n\t\tconst value = style[ property ];\n\t\tif ( null === value || undefined === value ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( result ) {\n\t\t\tresult += ';';\n\t\t} else {\n\t\t\tresult = '';\n\t\t}\n\n\t\tconst normalName = getNormalStylePropertyName( property );\n\t\tconst normalValue = getNormalStylePropertyValue( property, value );\n\t\tresult += normalName + ':' + normalValue;\n\t}\n\n\treturn result;\n}\n\nexport default renderElement;\n"]}