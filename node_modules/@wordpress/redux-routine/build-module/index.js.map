{"version":3,"sources":["/Users/netweb/dev/wordpress/gutenberg/packages/redux-routine/src/index.js"],"names":["isGenerator","castError","createMiddleware","controls","store","next","action","step","nextAction","control","type","routine","then","result","value","error","throw","undefined","dispatch"],"mappings":";;AAAA;;;AAGA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA;;;;;;;;;;;;;AAYA,eAAe,SAASC,gBAAT,GAA2C;AAAA,MAAhBC,QAAgB,uEAAL,EAAK;AACzD,SAAO,UAAEC,KAAF;AAAA,WAAa,UAAEC,IAAF;AAAA,aAAY,UAAEC,MAAF,EAAc;AAC7C,YAAK,CAAEN,WAAW,CAAEM,MAAF,CAAlB,EAA+B;AAC9B,iBAAOD,IAAI,CAAEC,MAAF,CAAX;AACA;;AAED,iBAASC,IAAT,CAAeC,UAAf,EAA4B;AAC3B,cAAK,CAAEA,UAAP,EAAoB;AACnB;AACA;;AAED,cAAMC,OAAO,GAAGN,QAAQ,CAAEK,UAAU,CAACE,IAAb,CAAxB;;AACA,cAAK,OAAOD,OAAP,KAAmB,UAAxB,EAAqC;AACpC,gBAAME,OAAO,GAAGF,OAAO,CAAED,UAAF,CAAvB;;AAEA,gBAAKG,OAAO,oBAAZ,EAAkC;AACjC;AACAA,cAAAA,OAAO,CAACC,IAAR,CACC,UAAEC,MAAF;AAAA,uBAAcN,IAAI,CAAED,MAAM,CAACD,IAAP,CAAaQ,MAAb,EAAsBC,KAAxB,CAAlB;AAAA,eADD,EAEC,UAAEC,KAAF;AAAA,uBAAaT,MAAM,CAACU,KAAP,CAAcf,SAAS,CAAEc,KAAF,CAAvB,CAAb;AAAA,eAFD;AAIA,aAND,MAMO,IAAKJ,OAAO,KAAKM,SAAjB,EAA6B;AACnC;AACAV,cAAAA,IAAI,CAAED,MAAM,CAACD,IAAP,CAAaM,OAAb,EAAuBG,KAAzB,CAAJ;AACA;AACD,WAbD,MAaO;AACN;AACAV,YAAAA,KAAK,CAACc,QAAN,CAAgBV,UAAhB;AACAD,YAAAA,IAAI,CAAED,MAAM,CAACD,IAAP,GAAcS,KAAhB,CAAJ;AACA;AACD;;AAEDP,QAAAA,IAAI,CAAED,MAAM,CAACD,IAAP,GAAcS,KAAhB,CAAJ;AACA,OAhCmB;AAAA,KAAb;AAAA,GAAP;AAiCA","sourcesContent":["/**\n * Internal dependencies\n */\nimport isGenerator from './is-generator';\nimport castError from './cast-error';\n\n/**\n * Creates a Redux middleware, given an object of controls where each key is an\n * action type for which to act upon, the value a function which returns either\n * a promise which is to resolve when evaluation of the action should continue,\n * or a value. The value or resolved promise value is assigned on the return\n * value of the yield assignment. If the control handler returns undefined, the\n * execution is not continued.\n *\n * @param {Object} controls Object of control handlers.\n *\n * @return {Function} Redux middleware function.\n */\nexport default function createMiddleware( controls = {} ) {\n\treturn ( store ) => ( next ) => ( action ) => {\n\t\tif ( ! isGenerator( action ) ) {\n\t\t\treturn next( action );\n\t\t}\n\n\t\tfunction step( nextAction ) {\n\t\t\tif ( ! nextAction ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst control = controls[ nextAction.type ];\n\t\t\tif ( typeof control === 'function' ) {\n\t\t\t\tconst routine = control( nextAction );\n\n\t\t\t\tif ( routine instanceof Promise ) {\n\t\t\t\t\t// Async control routine awaits resolution.\n\t\t\t\t\troutine.then(\n\t\t\t\t\t\t( result ) => step( action.next( result ).value ),\n\t\t\t\t\t\t( error ) => action.throw( castError( error ) ),\n\t\t\t\t\t);\n\t\t\t\t} else if ( routine !== undefined ) {\n\t\t\t\t\t// Sync control routine steps synchronously.\n\t\t\t\t\tstep( action.next( routine ).value );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Uncontrolled action is dispatched.\n\t\t\t\tstore.dispatch( nextAction );\n\t\t\t\tstep( action.next().value );\n\t\t\t}\n\t\t}\n\n\t\tstep( action.next().value );\n\t};\n}\n"]}