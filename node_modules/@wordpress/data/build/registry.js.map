{"version":3,"sources":["/Users/gziolo/PhpstormProjects/gutenberg/packages/data/src/registry.js"],"names":["isActionLike","action","type","isAsyncIterable","object","asyncIterator","isIterable","toAsyncIterable","maybeAction","resolve","createRegistry","storeConfigs","namespaces","listeners","globalListener","forEach","listener","registerReducer","reducerKey","reducer","enhancers","window","__REDUX_DEVTOOLS_EXTENSION__","push","name","instanceId","store","lastState","getState","subscribe","state","hasChanged","registerSelectors","newSelectors","createStateSelector","selector","args","selectors","registerResolvers","newResolvers","select","hasStartedResolution","dispatch","startResolution","finishResolution","createResolver","selectorName","hasOwnProperty","resolver","fulfill","fulfillment","isFulfilled","registerActions","newActions","createBoundAction","actions","registerStore","options","TypeError","resolvers","setupPersistence","storageKey","alternative","version","plugin","hint","registry","use","persistence","withPlugins","fns","fn","key","apply","arguments","dataStore","map","config"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AACA;;AAWA;;AAKA;;AACA;;AArBA;;;;AAYA;;;;AAKA;;;;AAMA;;;;;;;;;;;;;;;;AAgBA;;;;;;AAMA;;;;;;;AAOO,SAASA,YAAT,CAAuBC,MAAvB,EAAgC;AACtC,SACC,CAAC,CAAEA,MAAH,IACA,OAAOA,MAAM,CAACC,IAAd,KAAuB,QAFxB;AAIA;AAED;;;;;;;;;AAOO,SAASC,eAAT,CAA0BC,MAA1B,EAAmC;AACzC,SACC,CAAC,CAAEA,MAAH,IACA,OAAOA,MAAM,iBAASC,aAAT,CAAb,KAA0C,UAF3C;AAIA;AAED;;;;;;;;;AAOO,SAASC,UAAT,CAAqBF,MAArB,EAA8B;AACpC,SACC,CAAC,CAAEA,MAAH,IACA,OAAOA,MAAM,oBAAb,KAAqC,UAFtC;AAIA;AAED;;;;;;;;;;AAQO,SAASG,eAAT,CAA0BH,MAA1B,EAAmC;AACzC,MAAKD,eAAe,CAAEC,MAAF,CAApB,EAAiC;AAChC,WAAOA,MAAP;AACA;;AAED,SAAS;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACR;AACA,gBAAK,CAAEE,UAAU,CAAEF,MAAF,CAAjB,EAA8B;AAC7BA,cAAAA,MAAM,GAAG,CAAEA,MAAF,CAAT;AACA;;AAJO;AAAA;AAAA;AAAA;AAAA,oDAMiBA,MANjB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMEI,YAAAA,WANF;;AAOP;AACA,gBAAK,EAAIA,WAAW,4BAAf,CAAL,EAA4C;AAC3CA,cAAAA,WAAW,GAAG,iBAAQC,OAAR,CAAiBD,WAAjB,CAAd;AACA;;AAVM;AAYP,mBAAYA,WAAZ;;AAZO;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAT;AAeA;AAED;;;;;;;;;;AAQO,SAASE,cAAT,GAA6C;AAAA,MAApBC,YAAoB,uEAAL,EAAK;AACnD,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAIC,SAAS,GAAG,EAAhB;AAEA;;;;AAGA,WAASC,cAAT,GAA0B;AACzBD,IAAAA,SAAS,CAACE,OAAV,CAAmB,UAAEC,QAAF;AAAA,aAAgBA,QAAQ,EAAxB;AAAA,KAAnB;AACA;AAED;;;;;;;;;;;AASA,WAASC,eAAT,CAA0BC,UAA1B,EAAsCC,OAAtC,EAAgD;AAC/C,QAAMC,SAAS,GAAG,EAAlB;;AACA,QAAKC,MAAM,CAACC,4BAAZ,EAA2C;AAC1CF,MAAAA,SAAS,CAACG,IAAV,CAAgBF,MAAM,CAACC,4BAAP,CAAqC;AAAEE,QAAAA,IAAI,EAAEN,UAAR;AAAoBO,QAAAA,UAAU,EAAEP;AAAhC,OAArC,CAAhB;AACA;;AACD,QAAMQ,KAAK,GAAG,wBAAaP,OAAb,EAAsB,uBAAWC,SAAX,CAAtB,CAAd;AACAR,IAAAA,UAAU,CAAEM,UAAF,CAAV,GAA2B;AAAEQ,MAAAA,KAAK,EAALA,KAAF;AAASP,MAAAA,OAAO,EAAPA;AAAT,KAA3B,CAN+C,CAQ/C;AACA;;AACA,QAAIQ,SAAS,GAAGD,KAAK,CAACE,QAAN,EAAhB;AACAF,IAAAA,KAAK,CAACG,SAAN,CAAiB,YAAM;AACtB,UAAMC,KAAK,GAAGJ,KAAK,CAACE,QAAN,EAAd;AACA,UAAMG,UAAU,GAAGD,KAAK,KAAKH,SAA7B;AACAA,MAAAA,SAAS,GAAGG,KAAZ;;AAEA,UAAKC,UAAL,EAAkB;AACjBjB,QAAAA,cAAc;AACd;AACD,KARD;AAUA,WAAOY,KAAP;AACA;AAED;;;;;;;;;;;AASA,WAASM,iBAAT,CAA4Bd,UAA5B,EAAwCe,YAAxC,EAAuD;AACtD,QAAMP,KAAK,GAAGd,UAAU,CAAEM,UAAF,CAAV,CAAyBQ,KAAvC;;AACA,QAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAEC,QAAF;AAAA,aAAgB;AAAA,0CAAKC,IAAL;AAAKA,UAAAA,IAAL;AAAA;;AAAA,eAAeD,QAAQ,MAAR,UAAUT,KAAK,CAACE,QAAN,EAAV,SAA+BQ,IAA/B,EAAf;AAAA,OAAhB;AAAA,KAA5B;;AACAxB,IAAAA,UAAU,CAAEM,UAAF,CAAV,CAAyBmB,SAAzB,GAAqC,uBAAWJ,YAAX,EAAyBC,mBAAzB,CAArC;AACA;AAED;;;;;;;;;;;AASA,WAASI,iBAAT,CAA4BpB,UAA5B,EAAwCqB,YAAxC,EAAuD;AAAA,kBACrBC,MAAM,CAAE,WAAF,CADe;AAAA,QAC9CC,oBAD8C,WAC9CA,oBAD8C;;AAAA,oBAERC,QAAQ,CAAE,WAAF,CAFA;AAAA,QAE9CC,eAF8C,aAE9CA,eAF8C;AAAA,QAE7BC,gBAF6B,aAE7BA,gBAF6B;;AAItD,QAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAEV,QAAF,EAAYW,YAAZ,EAA8B;AACrD;AACC,UAAK,CAAEP,YAAY,CAACQ,cAAb,CAA6BD,YAA7B,CAAP,EAAqD;AACpD,eAAOX,QAAP;AACA;;AAED,UAAMT,KAAK,GAAGd,UAAU,CAAEM,UAAF,CAAV,CAAyBQ,KAAvC,CANoD,CAQpD;;AACA,UAAIsB,QAAQ,GAAGT,YAAY,CAAEO,YAAF,CAA3B;;AACA,UAAK,CAAEE,QAAQ,CAACC,OAAhB,EAA0B;AACzBD,QAAAA,QAAQ,GAAG;AAAEC,UAAAA,OAAO,EAAED;AAAX,SAAX;AACA;;AAZmD,eAcrCC,OAdqC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kCAcpD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8CAA2Bb,IAA3B;AAA2BA,oBAAAA,IAA3B;AAAA;;AAAA,uBACMK,oBAAoB,CAAEvB,UAAF,EAAc4B,YAAd,EAA4BV,IAA5B,CAD1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKCO,kBAAAA,eAAe,CAAEzB,UAAF,EAAc4B,YAAd,EAA4BV,IAA5B,CAAf,CALD,CAOC;AACA;;AACMN,kBAAAA,KATP,GASeJ,KAAK,CAACE,QAAN,EATf;AAWKsB,kBAAAA,WAXL,GAWmB,cAAAF,QAAQ,EAACC,OAAT,oBAAkBnB,KAAlB,SAA4BM,IAA5B,EAXnB,EAaC;;AACAc,kBAAAA,WAAW,GAAG3C,eAAe,CAAE2C,WAAF,CAA7B;;AAdD,sBAeQ/C,eAAe,CAAE+C,WAAF,CAfvB;AAAA;AAAA;AAAA;;AAgBEN,kBAAAA,gBAAgB,CAAE1B,UAAF,EAAc4B,YAAd,EAA4BV,IAA5B,CAAhB;AAhBF;;AAAA;AAAA;AAAA;AAAA;AAAA,2DAoBkCc,WApBlC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAoBmB1C,kBAAAA,WApBnB;;AAqBE;AACA,sBAAKR,YAAY,CAAEQ,WAAF,CAAjB,EAAmC;AAClCkB,oBAAAA,KAAK,CAACgB,QAAN,CAAgBlC,WAAhB;AACA;;AAxBH;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA2BCoC,kBAAAA,gBAAgB,CAAE1B,UAAF,EAAc4B,YAAd,EAA4BV,IAA5B,CAAhB;;AA3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAdoD;AAAA;AAAA;;AA4CpD,UAAK,OAAOY,QAAQ,CAACG,WAAhB,KAAgC,UAArC,EAAkD;AAClD;AACA;AACCF,QAAAA,OAAO,GAAG,uBAAW,CACpB,YAAe;AAAA;;AACd,cAAMnB,KAAK,GAAGJ,KAAK,CAACE,QAAN,EAAd;;AADc,6CAAVQ,IAAU;AAAVA,YAAAA,IAAU;AAAA;;AAEd,iBAAO,CAAE,aAAAY,QAAQ,EAACG,WAAT,mBAAsBrB,KAAtB,SAAgCM,IAAhC,EAAT;AACA,SAJmB,EAKpBa,OALoB,CAAX,CAAV;AAOA;;AAED,aAAO,YAAe;AACrBA,QAAAA,OAAO,MAAP;AACA,eAAOd,QAAQ,MAAR,mBAAP;AACA,OAHD;AAIA,KA5DD;;AA8DAvB,IAAAA,UAAU,CAAEM,UAAF,CAAV,CAAyBmB,SAAzB,GAAqC,uBAAWzB,UAAU,CAAEM,UAAF,CAAV,CAAyBmB,SAApC,EAA+CQ,cAA/C,CAArC;AACA;AAED;;;;;;;;;AAOA,WAASO,eAAT,CAA0BlC,UAA1B,EAAsCmC,UAAtC,EAAmD;AAClD,QAAM3B,KAAK,GAAGd,UAAU,CAAEM,UAAF,CAAV,CAAyBQ,KAAvC;;AACA,QAAM4B,iBAAiB,GAAG,SAApBA,iBAAoB,CAAErD,MAAF;AAAA,aAAc;AAAA,eAAeyB,KAAK,CAACgB,QAAN,CAAgBzC,MAAM,MAAN,mBAAhB,CAAf;AAAA,OAAd;AAAA,KAA1B;;AACAW,IAAAA,UAAU,CAAEM,UAAF,CAAV,CAAyBqC,OAAzB,GAAmC,uBAAWF,UAAX,EAAuBC,iBAAvB,CAAnC;AACA;AAED;;;;;;;;;;AAQA,WAASE,aAAT,CAAwBtC,UAAxB,EAAoCuC,OAApC,EAA8C;AAC7C,QAAK,CAAEA,OAAO,CAACtC,OAAf,EAAyB;AACxB,YAAM,IAAIuC,SAAJ,CAAe,4BAAf,CAAN;AACA;;AAED,QAAMhC,KAAK,GAAGT,eAAe,CAAEC,UAAF,EAAcuC,OAAO,CAACtC,OAAtB,CAA7B;;AAEA,QAAKsC,OAAO,CAACF,OAAb,EAAuB;AACtBH,MAAAA,eAAe,CAAElC,UAAF,EAAcuC,OAAO,CAACF,OAAtB,CAAf;AACA;;AAED,QAAKE,OAAO,CAACpB,SAAb,EAAyB;AACxBL,MAAAA,iBAAiB,CAAEd,UAAF,EAAcuC,OAAO,CAACpB,SAAtB,CAAjB;AACA;;AAED,QAAKoB,OAAO,CAACE,SAAb,EAAyB;AACxBrB,MAAAA,iBAAiB,CAAEpB,UAAF,EAAcuC,OAAO,CAACE,SAAtB,CAAjB;AACA;;AAED,WAAOjC,KAAP;AACA;AAED;;;;;;;;;AAOA,MAAMG,SAAS,GAAG,SAAZA,SAAY,CAAEb,QAAF,EAAgB;AACjCH,IAAAA,SAAS,CAACU,IAAV,CAAgBP,QAAhB;AAEA,WAAO,YAAM;AACZH,MAAAA,SAAS,GAAG,qBAASA,SAAT,EAAoBG,QAApB,CAAZ;AACA,KAFD;AAGA,GAND;AAQA;;;;;;;;;;AAQA,WAASwB,MAAT,CAAiBtB,UAAjB,EAA8B;AAC7B,WAAO,iBAAKN,UAAL,EAAiB,CAAEM,UAAF,EAAc,WAAd,CAAjB,CAAP;AACA;AAED;;;;;;;;;;AAQA,WAASwB,QAAT,CAAmBxB,UAAnB,EAAgC;AAC/B,WAAO,iBAAKN,UAAL,EAAiB,CAAEM,UAAF,EAAc,SAAd,CAAjB,CAAP;AACA;AAED;;;;;;;AAKA,WAAS0C,gBAAT,CAA2BC,UAA3B,EAAwC;AACvC,6BAAY,gCAAZ,EAA8C;AAC7CC,MAAAA,WAAW,EAAE,oBADgC;AAE7CC,MAAAA,OAAO,EAAE,KAFoC;AAG7CC,MAAAA,MAAM,EAAE,WAHqC;AAI7CC,MAAAA,IAAI,EAAE;AAJuC,KAA9C;AAOAC,IAAAA,QAAQ,CAACC,GAAT,CAAcC,oBAAd,EAA2B;AAAEP,MAAAA,UAAU,EAAVA;AAAF,KAA3B;AACA;AAED;;;;;;;;;;;AASA,WAASQ,WAAT,CAAsBC,GAAtB,EAA4B;AAC3B,WAAO,uBAAWA,GAAX,EAAgB,UAAEC,EAAF,EAAMC,GAAN;AAAA,aAAe,YAAW;AAChD,eAAON,QAAQ,CAAEM,GAAF,CAAR,CAAgBC,KAAhB,CAAuB,IAAvB,EAA6BC,SAA7B,CAAP;AACA,OAFsB;AAAA,KAAhB,CAAP;AAGA;;AAED,MAAIR,QAAQ,GAAG;AACdjD,IAAAA,eAAe,EAAfA,eADc;AAEde,IAAAA,iBAAiB,EAAjBA,iBAFc;AAGdM,IAAAA,iBAAiB,EAAjBA,iBAHc;AAIdc,IAAAA,eAAe,EAAfA,eAJc;AAKdI,IAAAA,aAAa,EAAbA,aALc;AAMd3B,IAAAA,SAAS,EAATA,SANc;AAOdW,IAAAA,MAAM,EAANA,MAPc;AAQdE,IAAAA,QAAQ,EAARA,QARc;AASdkB,IAAAA,gBAAgB,EAAhBA,gBATc;AAUdO,IAAAA,GAAG,EAAHA;AAVc,GAAf;AAaA;;;;;;;;;;AASA,WAASA,GAAT,CAAcH,MAAd,EAAsBP,OAAtB,EAAgC;AAC/BS,IAAAA,QAAQ,mCACJA,QADI,EAEJF,MAAM,CAAEE,QAAF,EAAYT,OAAZ,CAFF,CAAR;AAKA,WAAOS,QAAP;AACA;;AAED;AACC,iBAAaS;AADd,KAEIhE,YAFJ,GAGIiE,GAHJ,CAGS;AAAA;AAAA,QAAIpD,IAAJ;AAAA,QAAUqD,MAAV;;AAAA,WAAwBrB,aAAa,CAAEhC,IAAF,EAAQqD,MAAR,CAArC;AAAA,GAHT;AAKA,SAAOR,WAAW,CAAEH,QAAF,CAAlB;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { createStore } from 'redux';\nimport {\n\tflowRight,\n\twithout,\n\tmapValues,\n\toverEvery,\n\tget,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport dataStore from './store';\nimport { persistence } from './plugins';\n\n/**\n * An isolated orchestrator of store registrations.\n *\n * @typedef {WPDataRegistry}\n *\n * @property {Function} registerReducer\n * @property {Function} registerSelectors\n * @property {Function} registerResolvers\n * @property {Function} registerActions\n * @property {Function} registerStore\n * @property {Function} subscribe\n * @property {Function} select\n * @property {Function} dispatch\n * @property {Function} use\n */\n\n/**\n * An object of registry function overrides.\n *\n * @typedef {WPDataPlugin}\n */\n\n/**\n * Returns true if the given argument appears to be a dispatchable action.\n *\n * @param {*} action Object to test.\n *\n * @return {boolean} Whether object is action-like.\n */\nexport function isActionLike( action ) {\n\treturn (\n\t\t!! action &&\n\t\ttypeof action.type === 'string'\n\t);\n}\n\n/**\n * Returns true if the given object is an async iterable, or false otherwise.\n *\n * @param {*} object Object to test.\n *\n * @return {boolean} Whether object is an async iterable.\n */\nexport function isAsyncIterable( object ) {\n\treturn (\n\t\t!! object &&\n\t\ttypeof object[ Symbol.asyncIterator ] === 'function'\n\t);\n}\n\n/**\n * Returns true if the given object is iterable, or false otherwise.\n *\n * @param {*} object Object to test.\n *\n * @return {boolean} Whether object is iterable.\n */\nexport function isIterable( object ) {\n\treturn (\n\t\t!! object &&\n\t\ttypeof object[ Symbol.iterator ] === 'function'\n\t);\n}\n\n/**\n * Normalizes the given object argument to an async iterable, asynchronously\n * yielding on a singular or array of generator yields or promise resolution.\n *\n * @param {*} object Object to normalize.\n *\n * @return {AsyncGenerator} Async iterable actions.\n */\nexport function toAsyncIterable( object ) {\n\tif ( isAsyncIterable( object ) ) {\n\t\treturn object;\n\t}\n\n\treturn ( async function* () {\n\t\t// Normalize as iterable...\n\t\tif ( ! isIterable( object ) ) {\n\t\t\tobject = [ object ];\n\t\t}\n\n\t\tfor ( let maybeAction of object ) {\n\t\t\t// ...of Promises.\n\t\t\tif ( ! ( maybeAction instanceof Promise ) ) {\n\t\t\t\tmaybeAction = Promise.resolve( maybeAction );\n\t\t\t}\n\n\t\t\tyield await maybeAction;\n\t\t}\n\t}() );\n}\n\n/**\n * Creates a new store registry, given an optional object of initial store\n * configurations.\n *\n * @param {Object} storeConfigs Initial store configurations.\n *\n * @return {WPDataRegistry} Data registry.\n */\nexport function createRegistry( storeConfigs = {} ) {\n\tconst namespaces = {};\n\tlet listeners = [];\n\n\t/**\n\t * Global listener called for each store's update.\n\t */\n\tfunction globalListener() {\n\t\tlisteners.forEach( ( listener ) => listener() );\n\t}\n\n\t/**\n\t * Registers a new sub-reducer to the global state and returns a Redux-like\n\t * store object.\n\t *\n\t * @param {string} reducerKey Reducer key.\n\t * @param {Object} reducer    Reducer function.\n\t *\n\t * @return {Object} Store Object.\n\t */\n\tfunction registerReducer( reducerKey, reducer ) {\n\t\tconst enhancers = [];\n\t\tif ( window.__REDUX_DEVTOOLS_EXTENSION__ ) {\n\t\t\tenhancers.push( window.__REDUX_DEVTOOLS_EXTENSION__( { name: reducerKey, instanceId: reducerKey } ) );\n\t\t}\n\t\tconst store = createStore( reducer, flowRight( enhancers ) );\n\t\tnamespaces[ reducerKey ] = { store, reducer };\n\n\t\t// Customize subscribe behavior to call listeners only on effective change,\n\t\t// not on every dispatch.\n\t\tlet lastState = store.getState();\n\t\tstore.subscribe( () => {\n\t\t\tconst state = store.getState();\n\t\t\tconst hasChanged = state !== lastState;\n\t\t\tlastState = state;\n\n\t\t\tif ( hasChanged ) {\n\t\t\t\tglobalListener();\n\t\t\t}\n\t\t} );\n\n\t\treturn store;\n\t}\n\n\t/**\n\t * Registers selectors for external usage.\n\t *\n\t * @param {string} reducerKey   Part of the state shape to register the\n\t *                              selectors for.\n\t * @param {Object} newSelectors Selectors to register. Keys will be used as the\n\t *                              public facing API. Selectors will get passed the\n\t *                              state as first argument.\n\t */\n\tfunction registerSelectors( reducerKey, newSelectors ) {\n\t\tconst store = namespaces[ reducerKey ].store;\n\t\tconst createStateSelector = ( selector ) => ( ...args ) => selector( store.getState(), ...args );\n\t\tnamespaces[ reducerKey ].selectors = mapValues( newSelectors, createStateSelector );\n\t}\n\n\t/**\n\t * Registers resolvers for a given reducer key. Resolvers are side effects\n\t * invoked once per argument set of a given selector call, used in ensuring\n\t * that the data needs for the selector are satisfied.\n\t *\n\t * @param {string} reducerKey   Part of the state shape to register the\n\t *                              resolvers for.\n\t * @param {Object} newResolvers Resolvers to register.\n\t */\n\tfunction registerResolvers( reducerKey, newResolvers ) {\n\t\tconst { hasStartedResolution } = select( 'core/data' );\n\t\tconst { startResolution, finishResolution } = dispatch( 'core/data' );\n\n\t\tconst createResolver = ( selector, selectorName ) => {\n\t\t// Don't modify selector behavior if no resolver exists.\n\t\t\tif ( ! newResolvers.hasOwnProperty( selectorName ) ) {\n\t\t\t\treturn selector;\n\t\t\t}\n\n\t\t\tconst store = namespaces[ reducerKey ].store;\n\n\t\t\t// Normalize resolver shape to object.\n\t\t\tlet resolver = newResolvers[ selectorName ];\n\t\t\tif ( ! resolver.fulfill ) {\n\t\t\t\tresolver = { fulfill: resolver };\n\t\t\t}\n\n\t\t\tasync function fulfill( ...args ) {\n\t\t\t\tif ( hasStartedResolution( reducerKey, selectorName, args ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstartResolution( reducerKey, selectorName, args );\n\n\t\t\t\t// At this point, selectors have already been pre-bound to inject\n\t\t\t\t// state, it would not be otherwise provided to fulfill.\n\t\t\t\tconst state = store.getState();\n\n\t\t\t\tlet fulfillment = resolver.fulfill( state, ...args );\n\n\t\t\t\t// Attempt to normalize fulfillment as async iterable.\n\t\t\t\tfulfillment = toAsyncIterable( fulfillment );\n\t\t\t\tif ( ! isAsyncIterable( fulfillment ) ) {\n\t\t\t\t\tfinishResolution( reducerKey, selectorName, args );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor await ( const maybeAction of fulfillment ) {\n\t\t\t\t\t// Dispatch if it quacks like an action.\n\t\t\t\t\tif ( isActionLike( maybeAction ) ) {\n\t\t\t\t\t\tstore.dispatch( maybeAction );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfinishResolution( reducerKey, selectorName, args );\n\t\t\t}\n\n\t\t\tif ( typeof resolver.isFulfilled === 'function' ) {\n\t\t\t// When resolver provides its own fulfillment condition, fulfill\n\t\t\t// should only occur if not already fulfilled (opt-out condition).\n\t\t\t\tfulfill = overEvery( [\n\t\t\t\t\t( ...args ) => {\n\t\t\t\t\t\tconst state = store.getState();\n\t\t\t\t\t\treturn ! resolver.isFulfilled( state, ...args );\n\t\t\t\t\t},\n\t\t\t\t\tfulfill,\n\t\t\t\t] );\n\t\t\t}\n\n\t\t\treturn ( ...args ) => {\n\t\t\t\tfulfill( ...args );\n\t\t\t\treturn selector( ...args );\n\t\t\t};\n\t\t};\n\n\t\tnamespaces[ reducerKey ].selectors = mapValues( namespaces[ reducerKey ].selectors, createResolver );\n\t}\n\n\t/**\n\t * Registers actions for external usage.\n\t *\n\t * @param {string} reducerKey   Part of the state shape to register the\n\t *                              selectors for.\n\t * @param {Object} newActions   Actions to register.\n\t */\n\tfunction registerActions( reducerKey, newActions ) {\n\t\tconst store = namespaces[ reducerKey ].store;\n\t\tconst createBoundAction = ( action ) => ( ...args ) => store.dispatch( action( ...args ) );\n\t\tnamespaces[ reducerKey ].actions = mapValues( newActions, createBoundAction );\n\t}\n\n\t/**\n\t * Convenience for registering reducer with actions and selectors.\n\t *\n\t * @param {string} reducerKey Reducer key.\n\t * @param {Object} options    Store description (reducer, actions, selectors, resolvers).\n\t *\n\t * @return {Object} Registered store object.\n\t */\n\tfunction registerStore( reducerKey, options ) {\n\t\tif ( ! options.reducer ) {\n\t\t\tthrow new TypeError( 'Must specify store reducer' );\n\t\t}\n\n\t\tconst store = registerReducer( reducerKey, options.reducer );\n\n\t\tif ( options.actions ) {\n\t\t\tregisterActions( reducerKey, options.actions );\n\t\t}\n\n\t\tif ( options.selectors ) {\n\t\t\tregisterSelectors( reducerKey, options.selectors );\n\t\t}\n\n\t\tif ( options.resolvers ) {\n\t\t\tregisterResolvers( reducerKey, options.resolvers );\n\t\t}\n\n\t\treturn store;\n\t}\n\n\t/**\n\t * Subscribe to changes to any data.\n\t *\n\t * @param {Function}   listener Listener function.\n\t *\n\t * @return {Function}           Unsubscribe function.\n\t */\n\tconst subscribe = ( listener ) => {\n\t\tlisteners.push( listener );\n\n\t\treturn () => {\n\t\t\tlisteners = without( listeners, listener );\n\t\t};\n\t};\n\n\t/**\n\t * Calls a selector given the current state and extra arguments.\n\t *\n\t * @param {string} reducerKey Part of the state shape to register the\n\t *                            selectors for.\n\t *\n\t * @return {*} The selector's returned value.\n\t */\n\tfunction select( reducerKey ) {\n\t\treturn get( namespaces, [ reducerKey, 'selectors' ] );\n\t}\n\n\t/**\n\t * Returns the available actions for a part of the state.\n\t *\n\t * @param {string} reducerKey Part of the state shape to dispatch the\n\t *                            action for.\n\t *\n\t * @return {*} The action's returned value.\n\t */\n\tfunction dispatch( reducerKey ) {\n\t\treturn get( namespaces, [ reducerKey, 'actions' ] );\n\t}\n\n\t/**\n\t * Setup persistence for the current registry.\n\t *\n\t * @param {string} storageKey The storage key.\n\t */\n\tfunction setupPersistence( storageKey ) {\n\t\tdeprecated( 'data registry setupPersistence', {\n\t\t\talternative: 'persistence plugin',\n\t\t\tversion: '3.7',\n\t\t\tplugin: 'Gutenberg',\n\t\t\thint: 'See https://github.com/WordPress/gutenberg/pull/8341 for more details',\n\t\t} );\n\n\t\tregistry.use( persistence, { storageKey } );\n\t}\n\n\t/**\n\t * Maps an object of function values to proxy invocation through to the\n\t * current internal representation of the registry, which may be enhanced\n\t * by plugins.\n\t *\n\t * @param {Object<string,Function>} fns Object of function values.\n\t *\n\t * @return {Object<string,Function>} Object enhanced with plugin proxying.\n\t */\n\tfunction withPlugins( fns ) {\n\t\treturn mapValues( fns, ( fn, key ) => function() {\n\t\t\treturn registry[ key ].apply( null, arguments );\n\t\t} );\n\t}\n\n\tlet registry = {\n\t\tregisterReducer,\n\t\tregisterSelectors,\n\t\tregisterResolvers,\n\t\tregisterActions,\n\t\tregisterStore,\n\t\tsubscribe,\n\t\tselect,\n\t\tdispatch,\n\t\tsetupPersistence,\n\t\tuse,\n\t};\n\n\t/**\n\t * Enhances the registry with the prescribed set of overrides. Returns the\n\t * enhanced registry to enable plugin chaining.\n\t *\n\t * @param {WPDataPlugin} plugin  Plugin by which to enhance.\n\t * @param {?Object}      options Optional options to pass to plugin.\n\t *\n\t * @return {WPDataRegistry} Enhanced registry.\n\t */\n\tfunction use( plugin, options ) {\n\t\tregistry = {\n\t\t\t...registry,\n\t\t\t...plugin( registry, options ),\n\t\t};\n\n\t\treturn registry;\n\t}\n\n\tObject.entries( {\n\t\t'core/data': dataStore,\n\t\t...storeConfigs,\n\t} ).map( ( [ name, config ] ) => registerStore( name, config ) );\n\n\treturn withPlugins( registry );\n}\n"]}