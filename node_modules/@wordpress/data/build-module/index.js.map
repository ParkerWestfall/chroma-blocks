{"version":3,"sources":["/Users/gziolo/PhpstormProjects/gutenberg/packages/data/src/index.js"],"names":["combineReducers","defaultRegistry","plugins","default","withSelect","withDispatch","RegistryProvider","createRegistry","withRehydration","loadAndPersist","restrictPersistence","setPersistenceStorage","select","dispatch","subscribe","registerStore","registerReducer","registerActions","registerSelectors","registerResolvers","setupPersistence","use"],"mappings":"AAAA;;;AAGA,SAASA,eAAT,QAAgC,OAAhC;AAEA;;;;AAGA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,SAASC,OAAO,IAAIC,UAApB,QAAsC,0BAAtC;AACA,SAASD,OAAO,IAAIE,YAApB,QAAwC,4BAAxC;AACA,SAASF,OAAO,IAAIG,gBAApB,QAA4C,gCAA5C;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SACCC,eADD,EAECC,cAFD,EAGCC,mBAHD,EAICC,qBAJD,QAKO,cALP;AAMA,SAAST,OAAT;AAEA;;;;;;;;;;;AAUA,SAASF,eAAT;AAEA,OAAO,IAAMY,MAAM,GAAGX,eAAe,CAACW,MAA/B;AACP,OAAO,IAAMC,QAAQ,GAAGZ,eAAe,CAACY,QAAjC;AACP,OAAO,IAAMC,SAAS,GAAGb,eAAe,CAACa,SAAlC;AACP,OAAO,IAAMC,aAAa,GAAGd,eAAe,CAACc,aAAtC;AACP,OAAO,IAAMC,eAAe,GAAGf,eAAe,CAACe,eAAxC;AACP,OAAO,IAAMC,eAAe,GAAGhB,eAAe,CAACgB,eAAxC;AACP,OAAO,IAAMC,iBAAiB,GAAGjB,eAAe,CAACiB,iBAA1C;AACP,OAAO,IAAMC,iBAAiB,GAAGlB,eAAe,CAACkB,iBAA1C;AACP,OAAO,IAAMC,gBAAgB,GAAGnB,eAAe,CAACmB,gBAAzC;AACP,OAAO,IAAMC,GAAG,GAAGpB,eAAe,CAACoB,GAA5B","sourcesContent":["/**\n * External dependencies\n */\nimport { combineReducers } from 'redux';\n\n/**\n * Internal dependencies\n */\nimport defaultRegistry from './default-registry';\nimport * as plugins from './plugins';\n\nexport { default as withSelect } from './components/with-select';\nexport { default as withDispatch } from './components/with-dispatch';\nexport { default as RegistryProvider } from './components/registry-provider';\nexport { createRegistry } from './registry';\nexport {\n\twithRehydration,\n\tloadAndPersist,\n\trestrictPersistence,\n\tsetPersistenceStorage,\n} from './deprecated';\nexport { plugins };\n\n/**\n * The combineReducers helper function turns an object whose values are different\n * reducing functions into a single reducing function you can pass to registerReducer.\n *\n * @param {Object} reducers An object whose values correspond to different reducing\n *                          functions that need to be combined into one.\n *\n * @return {Function}       A reducer that invokes every reducer inside the reducers\n *                          object, and constructs a state object with the same shape.\n */\nexport { combineReducers };\n\nexport const select = defaultRegistry.select;\nexport const dispatch = defaultRegistry.dispatch;\nexport const subscribe = defaultRegistry.subscribe;\nexport const registerStore = defaultRegistry.registerStore;\nexport const registerReducer = defaultRegistry.registerReducer;\nexport const registerActions = defaultRegistry.registerActions;\nexport const registerSelectors = defaultRegistry.registerSelectors;\nexport const registerResolvers = defaultRegistry.registerResolvers;\nexport const setupPersistence = defaultRegistry.setupPersistence;\nexport const use = defaultRegistry.use;\n"]}